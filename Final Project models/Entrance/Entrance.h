// "Entrance.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Entrance.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Entrance_version_
const char Entrance_version[4] = { '0','1','9','d' };
#define _Entrance_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Entrance_vertexcount_
const unsigned Entrance_vertexcount = 180;
#define _Entrance_vertexcount_
#endif
#ifndef _Entrance_indexcount_
const unsigned Entrance_indexcount = 312;
#define _Entrance_indexcount_
#endif
#ifndef _Entrance_materialcount_
const unsigned Entrance_materialcount = 1; // can be used for batched draws
#define _Entrance_materialcount_
#endif
#ifndef _Entrance_meshcount_
const unsigned Entrance_meshcount = 1;
#define _Entrance_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Entrance_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Entrance_vertices[180] =
{
	{	{ 0.161142f, 2.837916f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, 2.735322f, -0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, 2.949858f, -0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, 3.083832f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, -0.006753f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, -0.006753f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, 2.083832f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, 2.083832f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, -0.006753f, 0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, 2.072143f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, 2.083832f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, -0.006753f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 2.072144f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161141f, -0.006752f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, -0.006752f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, 2.072144f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, 2.455030f, -0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ -0.161142f, 2.072144f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ 0.161142f, 2.072144f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ 0.161142f, 2.455030f, -0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ 0.161142f, 2.735322f, 0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, 2.949857f, 0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, 2.455030f, -0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, 2.072144f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, 2.083832f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, 2.583832f, -0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, 2.455030f, 0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, 2.583832f, 0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, -0.006752f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, -0.006752f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161142f, -0.006752f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161141f, -0.006752f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161141f, -0.006752f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161142f, -0.006752f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161142f, -0.006752f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.161141f, -0.006752f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.161141f, 2.083832f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.161142f, 2.083832f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.161142f, 2.949857f, 0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ -0.161142f, 2.949857f, 0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ -0.161142f, 2.583832f, 0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ 0.161142f, 2.583832f, 0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ 0.161142f, 3.083832f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ -0.161142f, 3.083832f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ -0.161142f, 2.949857f, 0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ 0.161142f, 2.949857f, 0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ 0.161142f, 2.583832f, 0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ -0.161142f, 2.583832f, 0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ -0.161142f, 2.083832f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ 0.161142f, 2.083832f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ 0.161142f, 2.083832f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ -0.161141f, 2.083832f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ -0.161142f, 2.583832f, -0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ 0.161142f, 2.583832f, -0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ 0.161142f, 2.583832f, -0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ -0.161142f, 2.583832f, -0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ -0.161142f, 2.949858f, -0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ 0.161142f, 2.949858f, -0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ 0.161142f, 2.949858f, -0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ -0.161142f, 2.949858f, -0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ -0.161142f, 3.083832f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ 0.161142f, 3.083832f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ -0.161142f, 2.072143f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ -0.161142f, 2.455030f, 0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ 0.161142f, 2.455030f, 0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ 0.161142f, 2.072143f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ -0.161142f, 2.837916f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ -0.161142f, 2.735322f, -0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ 0.161142f, 2.735322f, -0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ 0.161142f, 2.837916f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ -0.161142f, 2.455030f, 0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ -0.161142f, 2.735322f, 0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ 0.161142f, 2.735322f, 0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ 0.161142f, 2.455030f, 0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ -0.161142f, 2.735322f, -0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ -0.161142f, 2.455030f, -0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ 0.161142f, 2.455030f, -0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ 0.161142f, 2.735322f, -0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ -0.161142f, -0.006753f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.161142f, 2.072143f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.161142f, 2.072143f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.161142f, -0.006753f, 0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.161142f, 2.735322f, 0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ -0.161142f, 2.837916f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ 0.161142f, 2.837916f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ 0.161142f, 2.735322f, 0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ 0.161142f, -0.006753f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161142f, -0.006753f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161142f, -0.006753f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161142f, -0.006753f, 0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161142f, 2.949858f, -0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 2.735322f, -0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 2.837916f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 3.083832f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 2.083832f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, -0.006753f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, -0.006753f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, 2.083832f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, 2.083832f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 2.072143f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, -0.006753f, 0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, -0.006753f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, -0.006752f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161141f, -0.006752f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.161142f, 2.072144f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, 2.072144f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.161142f, 2.072144f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ 0.161142f, 2.072144f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ 0.161142f, 2.455030f, -0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ -0.161142f, 2.455030f, -0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, 0.965900f }	},
	{	{ -0.161142f, 2.735322f, 0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 2.949857f, 0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 2.083832f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 2.072144f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 2.455030f, -0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 2.583832f, -0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 2.455030f, 0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, 2.583832f, 0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, -0.006752f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ -0.161142f, -0.006752f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -1.000000f, 0.000000f, 0.000000f }	},
	{	{ 0.161141f, -0.006752f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161141f, -0.006752f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161142f, -0.006752f, -0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161142f, -0.006752f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161141f, 2.083832f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.161141f, -0.006752f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.161142f, -0.006752f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.161142f, 2.083832f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.161142f, 2.583832f, 0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ 0.161142f, 2.949857f, 0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ -0.161142f, 2.949857f, 0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ -0.161142f, 2.583832f, 0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ 0.161142f, 2.949857f, 0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ 0.161142f, 3.083832f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ -0.161142f, 3.083832f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ -0.161142f, 2.949857f, 0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, 0.258800f }	},
	{	{ 0.161142f, 2.083832f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ 0.161142f, 2.583832f, 0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ -0.161142f, 2.583832f, 0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ -0.161142f, 2.083832f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, 0.965900f }	},
	{	{ 0.161142f, 2.583832f, -0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ 0.161141f, 2.083832f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ -0.161142f, 2.083832f, -1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ -0.161142f, 2.583832f, -0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.258800f, -0.965900f }	},
	{	{ 0.161142f, 2.949858f, -0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ 0.161142f, 2.583832f, -0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ -0.161142f, 2.583832f, -0.866026f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ -0.161142f, 2.949858f, -0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ 0.161142f, 3.083832f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ 0.161142f, 2.949858f, -0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ -0.161142f, 2.949858f, -0.500000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ -0.161142f, 3.083832f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.965900f, -0.258800f }	},
	{	{ -0.161142f, 2.455030f, 0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ 0.161142f, 2.455030f, 0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ 0.161142f, 2.072143f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ -0.161142f, 2.072143f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.258800f, -0.965900f }	},
	{	{ -0.161142f, 2.735322f, -0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ 0.161142f, 2.735322f, -0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ 0.161142f, 2.837916f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ -0.161142f, 2.837916f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, 0.258800f }	},
	{	{ -0.161142f, 2.735322f, 0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ 0.161142f, 2.735322f, 0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ 0.161142f, 2.455030f, 0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ -0.161142f, 2.455030f, 0.663179f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ -0.161142f, 2.455030f, -0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ 0.161142f, 2.455030f, -0.663178f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ 0.161142f, 2.735322f, -0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ -0.161142f, 2.735322f, -0.382886f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ -0.161142f, 2.072143f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.161142f, 2.072143f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.161142f, -0.006753f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.161142f, -0.006753f, 0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.161142f, 2.837916f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ 0.161142f, 2.837916f, -0.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ 0.161142f, 2.735322f, 0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ -0.161142f, 2.735322f, 0.382887f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.965900f, -0.258800f }	},
	{	{ 0.161142f, -0.006753f, 0.765772f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.161142f, -0.006753f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161142f, -0.006753f, 1.000000f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.161142f, -0.006753f, 0.765773f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
};
#define _Entrance_vertices_
#endif
#ifndef _Entrance_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Entrance_indices[312] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 5, 6,
	 7, 4, 6,
	 8, 9, 10,
	 11, 8, 10,
	 12, 13, 14,
	 15, 12, 14,
	 16, 17, 18,
	 19, 16, 18,
	 20, 0, 3,
	 21, 20, 3,
	 22, 23, 24,
	 25, 22, 24,
	 26, 20, 21,
	 27, 26, 21,
	 1, 22, 25,
	 2, 1, 25,
	 9, 26, 27,
	 10, 9, 27,
	 23, 28, 29,
	 24, 23, 29,
	 30, 31, 32,
	 33, 30, 32,
	 34, 35, 36,
	 37, 34, 36,
	 38, 39, 40,
	 41, 38, 40,
	 42, 43, 44,
	 45, 42, 44,
	 46, 47, 48,
	 49, 46, 48,
	 50, 51, 52,
	 53, 50, 52,
	 54, 55, 56,
	 57, 54, 56,
	 58, 59, 60,
	 61, 58, 60,
	 62, 63, 64,
	 65, 62, 64,
	 66, 67, 68,
	 69, 66, 68,
	 70, 71, 72,
	 73, 70, 72,
	 74, 75, 76,
	 77, 74, 76,
	 78, 79, 80,
	 81, 78, 80,
	 82, 83, 84,
	 85, 82, 84,
	 86, 87, 88,
	 89, 86, 88,
	 90, 91, 92,
	 93, 90, 92,
	 94, 95, 96,
	 97, 94, 96,
	 98, 99, 100,
	 101, 98, 100,
	 102, 103, 104,
	 105, 102, 104,
	 106, 107, 108,
	 109, 106, 108,
	 93, 92, 110,
	 111, 93, 110,
	 112, 113, 114,
	 115, 112, 114,
	 111, 110, 116,
	 117, 111, 116,
	 115, 114, 91,
	 90, 115, 91,
	 117, 116, 99,
	 98, 117, 99,
	 118, 119, 113,
	 112, 118, 113,
	 120, 121, 122,
	 123, 120, 122,
	 124, 125, 126,
	 127, 124, 126,
	 128, 129, 130,
	 131, 128, 130,
	 132, 133, 134,
	 135, 132, 134,
	 136, 137, 138,
	 139, 136, 138,
	 140, 141, 142,
	 143, 140, 142,
	 144, 145, 146,
	 147, 144, 146,
	 148, 149, 150,
	 151, 148, 150,
	 152, 153, 154,
	 155, 152, 154,
	 156, 157, 158,
	 159, 156, 158,
	 160, 161, 162,
	 163, 160, 162,
	 164, 165, 166,
	 167, 164, 166,
	 168, 169, 170,
	 171, 168, 170,
	 172, 173, 174,
	 175, 172, 174,
	 176, 177, 178,
	 179, 176, 178,
};
#define _Entrance_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Entrance_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Entrance_materials[1] =
{
	{
		{{ 0.287072f, 0.287072f, 0.287072f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"Rock",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Entrance_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Entrance_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Entrance_batches[1][2] =
{
	{ 312, 0 },
};
#define _Entrance_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Entrance_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Entrance_meshes[1] =
{
	{
		"default",
		312,
		0,
		0,
	},
};
#define _Entrance_meshes_
#endif
